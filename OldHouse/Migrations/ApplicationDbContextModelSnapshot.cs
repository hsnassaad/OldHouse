// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OldHouse.Data;

namespace OldHouse.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OldHouse.Data.Patient", b =>
                {
<<<<<<< HEAD
                    b.Property<int>("PatientId")
=======
                    b.Property<int>("Id")
>>>>>>> b4d5ae3d637992ccffc314a1fc8f956118fe3870
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate");

                    b.Property<string>("BloodType");

                    b.Property<DateTime>("CreatedAt");

<<<<<<< HEAD
                    b.Property<string>("DisplayName");

=======
>>>>>>> b4d5ae3d637992ccffc314a1fc8f956118fe3870
                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Gender")
                        .HasMaxLength(256);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256);

<<<<<<< HEAD
                    b.Property<int?>("MachineId");

                    b.Property<int?>("RelativeId");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("PatientId");

                    b.HasIndex("MachineId");

                    b.HasIndex("RelativeId");
=======
                    b.Property<string>("MachineId")
                        .HasMaxLength(2147483647);

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");
>>>>>>> b4d5ae3d637992ccffc314a1fc8f956118fe3870

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("OldHouse.Models.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2147483647);

<<<<<<< HEAD
                    b.Property<string>("Level")
                        .HasMaxLength(2147483647);

                    b.Property<int>("PatientId");
=======
                    b.Property<int>("PatientId");

                    b.Property<string>("level")
                        .HasMaxLength(2147483647);
>>>>>>> b4d5ae3d637992ccffc314a1fc8f956118fe3870

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("OldHouse.Models.Machine", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

<<<<<<< HEAD
                    b.Property<string>("Battery");

                    b.Property<string>("SerialNumber");

                    b.Property<string>("Status");
=======
                    b.Property<float>("BloodPressure");
>>>>>>> b4d5ae3d637992ccffc314a1fc8f956118fe3870

                    b.HasKey("MachineId");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("OldHouse.Models.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

<<<<<<< HEAD
                    b.Property<float>("BloodPressure");

                    b.Property<DateTime>("CreatedAt");

=======
>>>>>>> b4d5ae3d637992ccffc314a1fc8f956118fe3870
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2147483647);

                    b.Property<float>("GlucoseLevel");
<<<<<<< HEAD

                    b.Property<float>("HeartRate");

                    b.Property<int>("PatientId");

=======

                    b.Property<float>("HeartRate");

                    b.Property<int>("PatientId");

>>>>>>> b4d5ae3d637992ccffc314a1fc8f956118fe3870
                    b.Property<float>("Temperature");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("OldHouse.Models.Relative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int>("PatientId");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("Relation")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

<<<<<<< HEAD
            modelBuilder.Entity("OldHouse.Data.Patient", b =>
                {
                    b.HasOne("OldHouse.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId");

                    b.HasOne("OldHouse.Models.Relative", "Relative")
                        .WithMany()
                        .HasForeignKey("RelativeId");
=======
                    b.ToTable("Relatives");
>>>>>>> b4d5ae3d637992ccffc314a1fc8f956118fe3870
                });

            modelBuilder.Entity("OldHouse.Models.Alert", b =>
                {
                    b.HasOne("OldHouse.Data.Patient", "Patient")
                        .WithMany("Alerts")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OldHouse.Models.Record", b =>
                {
                    b.HasOne("OldHouse.Data.Patient", "Patient")
                        .WithMany("Records")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
<<<<<<< HEAD
=======
                });

            modelBuilder.Entity("OldHouse.Models.Relative", b =>
                {
                    b.HasOne("OldHouse.Data.Patient", "Patient")
                        .WithOne("Relative")
                        .HasForeignKey("OldHouse.Models.Relative", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
>>>>>>> b4d5ae3d637992ccffc314a1fc8f956118fe3870
                });
#pragma warning restore 612, 618
        }
    }
}
